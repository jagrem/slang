namespace slang.Lexing
{
    public enum State {
        Zero,
        Empty,
        Error,

        Identifier,

        M_a_abstract_or_as_or_async_or_await,
        K_ab_abstract,
        K_abs_abstract,
        K_abst_abstract,
        K_abstr_abstract,
        K_abstra_abstract,
        K_abstrac_abstract,
        K_abstract,
        M_as_as_or_async,
        K_asy_async,
        K_asyn_async,
        K_async,
        K_aw_await,
        K_awa_await,
        K_awai_await,
        K_await,
        M_b_base_or_bool_or_break_or_byte,
        K_ba_base,
        K_bas_base,
        K_base,
        K_bo_bool,
        K_boo_bool,
        K_bool,
        K_br_break,
        K_bre_break,
        K_brea_break,
        K_break,
        K_by_byte,
        K_byt_byte,
        K_byte,
        M_c_case_or_catch_or_char_or_checked_or_class_or_continue,
        M_ca_case_or_catch,
        K_cas_case,
        K_case,
        K_cat_catch,
        K_catc_catch,
        K_catch,
        M_ch_char_or_checked,
        K_cha_char,
        K_char,
        K_che_checked,
        K_chec_checked,
        K_check_checked,
        K_checke_checked,
        K_checked,
        K_cl_class,
        K_cla_class,
        K_clas_class,
        K_class,
        K_co_continue,
        K_con_continue,
        K_cont_continue,
        K_conti_continue,
        K_contin_continue,
        K_continu_continue,
        K_continue,
        M_d_decimal_or_def_or_default_or_dynamic_or_do_or_double,
        M_de_decimal_or_def_or_default,
        K_dec_decimal,
        K_deci_decimal,
        K_decim_decimal,
        K_decima_decimal,
        K_decimal,
        M_def_def_or_default,
        K_defa_default,
        K_defau_default,
        K_defaul_default,
        K_default,
        K_dy_dynamic,
        K_dyn_dynamic,
        K_dyna_dynamic,
        K_dynam_dynamic,
        K_dynami_dynamic,
        K_dynamic,
        M_do_do_or_double,
        K_dou_double,
        K_doub_double,
        K_doubl_double,
        K_double,
        M_e_else_or_enum_or_extends,
        K_el_else,
        K_els_else,
        K_else,
        K_en_enum,
        K_enu_enum,
        K_enum,
        K_ex_extends,
        K_ext_extends,
        K_exte_extends,
        K_exten_extends,
        K_extend_extends,
        K_extends,
        M_f_false_or_finally_or_fixed_or_float_or_for,
        K_fa_false,
        K_fal_false,
        K_fals_false,
        K_false,
        M_fi_finally_or_fixed,
        K_fin_finally,
        K_fina_finally,
        K_final_finally,
        K_finall_finally,
        K_finally,
        K_fix_fixed,
        K_fixe_fixed,
        K_fixed,
        K_fl_float,
        K_flo_float,
        K_floa_float,
        K_float,
        K_fo_for,
        K_for,
        M_i_if_or_implicit_or_import_or_in_or_int_or_internal_or_is,
        K_if,
        M_im_implicit_or_import,
        M_imp_implicit_or_import,
        K_impl_implicit,
        K_impli_implicit,
        K_implic_implicit,
        K_implici_implicit,
        K_implicit,
        K_impo_import,
        K_impor_import,
        K_import,
        M_in_in_or_int_or_internal,
        M_int_int_or_internal,
        K_inte_internal,
        K_inter_internal,
        K_intern_internal,
        K_interna_internal,
        K_internal,
        K_is,
        M_l_lock_or_long,
        M_lo_lock_or_long,
        K_loc_lock,
        K_lock,
        K_lon_long,
        K_long,
        K_m_match,
        K_ma_match,
        K_mat_match,
        K_matc_match,
        K_match,
        K_n_new,
        K_ne_new,
        K_new,
        M_o_object_or_operator_or_override,
        K_ob_object,
        K_obj_object,
        K_obje_object,
        K_objec_object,
        K_object,
        K_op_operator,
        K_ope_operator,
        K_oper_operator,
        K_opera_operator,
        K_operat_operator,
        K_operato_operator,
        K_operator,
        K_ov_override,
        K_ove_override,
        K_over_override,
        K_overr_override,
        K_overri_override,
        K_overrid_override,
        K_override,
        M_p_package_or_private_or_protected,
        K_pa_package,
        K_pac_package,
        K_pack_package,
        K_packa_package,
        K_packag_package,
        K_package,
        M_pr_private_or_protected,
        K_pri_private,
        K_priv_private,
        K_priva_private,
        K_privat_private,
        K_private,
        K_pro_protected,
        K_prot_protected,
        K_prote_protected,
        K_protec_protected,
        K_protect_protected,
        K_protecte_protected,
        K_protected,
        M_r_readonly_or_return,
        M_re_readonly_or_return,
        K_rea_readonly,
        K_read_readonly,
        K_reado_readonly,
        K_readon_readonly,
        K_readonl_readonly,
        K_readonly,
        K_ret_return,
        K_retu_return,
        K_retur_return,
        K_return,
        K_s_sealed,
        K_se_sealed,
        K_sea_sealed,
        K_seal_sealed,
        K_seale_sealed,
        K_sealed,
        M_t_this_or_throw_or_trait_or_true_or_try_or_type,
        M_th_this_or_throw,
        K_thi_this,
        K_this,
        K_thr_throw,
        K_thro_throw,
        K_throw,
        M_tr_trait_or_true_or_try,
        K_tra_trait,
        K_trai_trait,
        K_trait,
        K_tru_true,
        K_true,
        K_try,
        K_ty_type,
        K_typ_type,
        K_type,
        M_v_val_or_var,
        M_va_val_or_var,
        K_val,
        K_var,
        M_w_while_or_with,
        K_wh_while,
        K_whi_while,
        K_whil_while,
        K_while,
        K_wi_with,
        K_wit_with,
        K_with,
        K_y_yield,
        K_yi_yield,
        K_yie_yield,
        K_yiel_yield,
        K_yield,

        // numbers
        S_number,
        S_number_zero,
        S_number_and_hexadecimal_specifier,
        S_hexadecimal_number,
        S_signed_exponent_and_number_with_specifier,
        S_signed_exponent_and_number, 
        S_number_with_signed_exponent,
        S_number_with_exponent,
        S_number_with_real_specifier,
        S_number_with_integer_specifier,
        S_number_with_unsigned_specifier,
        S_number_with_unsigned_integer_specifier,
        S_decimal_point_and_number,
        S_number_and_decimal_point,

        // text
        C_single_opening_quote,
        C_single_closing_quote,
        C_escape,
        C_escape_hexadecimal_character,
        C_hexadecimal_character_1,
        C_hexadecimal_character_2,
        C_hexadecimal_character_3,
        C_hexadecimal_character_4,
        C_escape_unicode_character_short,
        C_unicode_character_short_1,
        C_unicode_character_short_2,
        C_unicode_character_short_3,
        C_unicode_character_short_4,
        C_escape_unicode_character_long,
        C_unicode_character_long_1,
        C_unicode_character_long_2,
        C_unicode_character_long_3,
        C_unicode_character_long_4,
        C_unicode_character_long_5,
        C_unicode_character_long_6,
        C_unicode_character_long_7,
        C_unicode_character_long_8,

        // punctuation
        P_ampersand,
        P_apostrophe,
        P_asterisk,
        P_at,
        P_back_slash,
        P_caret,
        P_colon,
        P_comma,
        P_dollar_sign,
        //P_dot,
        P_equals,
        P_exclamation_mark,
        P_forward_slash,
        P_hyphen,
        P_left_angle_bracket,
        P_left_brace,
        P_left_parenthesis,
        P_left_square_bracket,
        P_modulus,
        P_octothorpe,
        P_pipe,
        P_plus,
        P_question_mark,
        P_right_angle_bracket,
        P_right_brace,
        P_right_parenthesis,
        P_right_square_bracket,
        P_semicolon,
        P_tilde,
        P_underscore
    }
    
}

