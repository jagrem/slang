using System;
using System.IO;
using slang.Compilation;

namespace sc
{
    class MainClass
    {
        public static void Main (string[] args)
        {
            WriteLogo ();
            WriteHeader (new[] {  "slang compiler (sc), version 0.0.0.0", "Copyright James G. McAuley 2015" });

            if(args.Length == 0) {
                Console.Error.WriteLine ("No files specified.");
            }

            var projectName = args [0];

            var compilationRoot = new CompilationRoot (new CompilationMetadata (projectName));

            foreach(var arg in args) {
                if(!File.Exists (arg)) {
                    WriteError ("Input file: '{0}' does not exist.", arg);
                    Environment.Exit (1);
                }

                if(Path.GetExtension (arg) != ".sl") {
                    WriteError ("Input file: '{0}' does not have an .sl extension.", arg);
                    Environment.Exit (2);
                }

                try {
                    WriteInfo ("Parsing {0}...", arg);
                    //var parser = new SlangParser ();
                    //var root = parser.Parse (File.ReadAllText (arg));
                    //compilationRoot.CompilationUnits.Add(new CompilationUnit(arg, root));
                } catch(Exception e) {
                    WriteError ("Parse error: {0}.", e);
                    Environment.Exit (3);
                }
            }

            //AssemblyDefinition assemblyDefinition = null;

            //try {
            //        WriteInfo ("Compiling {0}...", projectName);
            //    var compiler = new Compiler ();
            //    assemblyDefinition = compiler.Compile (compilationRoot);
            //} catch(Exception e) {
            //    WriteError ("Compile error: {0}.", e);
            //    Environment.Exit (4);
            //}

            //try {
            //    Generator.GenerateAssembly (assemblyDefinition);
            //} catch(Exception e) {
            //    WriteError ("IL generation error: {0}.", e);
            //    Environment.Exit (5);
            //}

            Environment.Exit (0);
        }

        static void WriteHeader(string[] header)
        {
            Console.ForegroundColor = ConsoleColor.Cyan;
            foreach(var message in header)
            {
                Console.WriteLine (message);
            }

            Console.ResetColor ();
        }

        static void WriteInfo(string format, params object[] args)
        {
            var message = string.Format (format, args);
            Console.WriteLine ("    {0}", message);
        }

        static void WriteError(string format, params object[] args)
        {
            Console.ForegroundColor = ConsoleColor.Red;
            var message = string.Format (format, args);
            Console.Error.WriteLine (message);
            Console.ResetColor ();
        }

        static void WriteLogo()
        {
            // Generated by http://patorjk.com/software/taag/#p=display&f=Larry%203D&t=slang%0A
            Console.WriteLine (@"       ___                                
      /\_ \                               
  ____\//\ \      __      ___      __     
 /',__\ \ \ \   /'__`\  /' _ `\  /'_ `\   
/\__, `\ \_\ \_/\ \L\.\_/\ \/\ \/\ \L\ \  
\/\____/ /\____\ \__/.\_\ \_\ \_\ \____ \ 
 \/___/  \/____/\/__/\/_/\/_/\/_/\/___L\ \
                                   /\____/
                                   \_/__/ ");
        }
    }
}
